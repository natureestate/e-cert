import React, { useState, useEffect } from 'react';
import { Box, Flex, Card, Heading, Text, Button, Badge, TextArea } from '@radix-ui/themes';
import { EyeOpenIcon, DownloadIcon } from '@radix-ui/react-icons';
import { WorkDelivery } from '../types/workDelivery';
import { FirestoreService } from '../services/firestoreService';
import { exportWorkDeliveryToPDF } from '../utils/pdfGenerator';

interface WorkDeliveryHistoryProps {
  onViewDelivery?: (delivery: WorkDelivery) => void;
}

export const WorkDeliveryHistory: React.FC<WorkDeliveryHistoryProps> = ({
  onViewDelivery
}) => {
  const [deliveries, setDeliveries] = useState<WorkDelivery[]>([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterWorkType, setFilterWorkType] = useState<string>('all');
  const [filterStatus, setFilterStatus] = useState<string>('all');

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô
  useEffect(() => {
    const loadDeliveries = async () => {
      try {
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å Firestore
        const deliveriesData = await FirestoreService.getWorkDeliveries();
        console.log('üìä ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å Firestore:', deliveriesData);
        
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÅ‡∏ó‡∏ô
        if (deliveriesData.length === 0) {
          console.log('üìã ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Firestore ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÅ‡∏ó‡∏ô');
          const mockDeliveries: WorkDelivery[] = [
          {
            id: '1',
            deliveryNumber: 'WD-HOUSE-001',
            workType: 'house-construction',
            companyId: 'comp1',
            companyName: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏û‡∏£‡∏µ‡∏Ñ‡∏≤‡∏™‡∏ó‡πå‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï ‡∏à‡∏≥‡∏Å‡∏±‡∏î',
            companyAddress: '99/9 ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï ‡∏ñ‡∏ô‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡πÅ‡∏Ç‡∏ß‡∏á‡∏•‡∏∏‡∏°‡∏û‡∏¥‡∏ô‡∏µ ‡πÄ‡∏Ç‡∏ï‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10330',
            companyPhone: '02-123-4567',
            companyWebsite: 'www.precast.co.th',
            customerId: 'cust1',
            customerName: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡∏£‡∏±‡∏Å‡∏ö‡πâ‡∏≤‡∏ô',
            buyer: '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
            projectId: 'proj1',
            projectName: '‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏™‡∏∏‡∏Ç',
            projectLocation: '123 ‡∏´‡∏°‡∏π‡πà 4 ‡∏ï.‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å ‡∏≠.‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏à.‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ 11000',
            phases: [
              { phaseNumber: 1, name: '‡πÄ‡∏ã‡πá‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤', description: '‡πÄ‡∏ã‡πá‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á', isCompleted: true, completedDate: new Date('2024-01-15') },
              { phaseNumber: 2, name: '‡∏ê‡∏≤‡∏ô‡∏£‡∏≤‡∏Å,‡∏ï‡∏≠‡∏°‡πà‡∏≠', description: '‡∏á‡∏≤‡∏ô‡∏ó‡∏≥‡∏ê‡∏≤‡∏ô‡∏£‡∏≤‡∏Å‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡∏ï‡∏≠‡∏°‡πà‡∏≠', isCompleted: true, completedDate: new Date('2024-02-01') },
              { phaseNumber: 3, name: '‡∏Ñ‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏î‡∏¥‡∏ô', description: '‡∏á‡∏≤‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏î‡∏¥‡∏ô', isCompleted: false },
            ],
            currentPhase: 3,
            issueDate: new Date('2024-02-15'),
            deliveryDate: new Date('2024-02-20'),
            additionalNotes: '‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß 2 ‡∏ä‡∏±‡πâ‡∏ô',
            status: 'delivered',
            isActive: true,
            createdAt: new Date('2024-02-15'),
            updatedAt: new Date('2024-02-15'),
          },
          {
            id: '2',
            deliveryNumber: 'WD-PRECAST-001',
            workType: 'precast-concrete',
            companyId: 'comp1',
            companyName: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏û‡∏£‡∏µ‡∏Ñ‡∏≤‡∏™‡∏ó‡πå‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï ‡∏à‡∏≥‡∏Å‡∏±‡∏î',
            companyAddress: '99/9 ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï ‡∏ñ‡∏ô‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡πÅ‡∏Ç‡∏ß‡∏á‡∏•‡∏∏‡∏°‡∏û‡∏¥‡∏ô‡∏µ ‡πÄ‡∏Ç‡∏ï‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10330',
            companyPhone: '02-123-4567',
            companyWebsite: 'www.precast.co.th',
            customerId: 'cust2',
            customerName: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô',
            buyer: '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°',
            projectId: 'proj2',
            projectName: '‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏î‡∏°‡∏¥‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡∏™‡∏°‡∏±‡∏¢‡πÉ‡∏´‡∏°‡πà',
            projectLocation: '456 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏±‡∏ä‡∏î‡∏≤ ‡πÅ‡∏Ç‡∏ß‡∏á‡∏•‡∏≤‡∏î‡∏¢‡∏≤‡∏ß ‡πÄ‡∏Ç‡∏ï‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10900',
            phases: [
              { phaseNumber: 1, name: '‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ú‡∏•‡∏¥‡∏ï', description: '‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ú‡∏•‡∏¥‡∏ï', isCompleted: true, completedDate: new Date('2024-01-10') },
              { phaseNumber: 2, name: '‡∏á‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏î‡∏¥‡∏ô', description: '‡∏á‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏î‡∏¥‡∏ô', isCompleted: true, completedDate: new Date('2024-01-25') },
              { phaseNumber: 3, name: '‡∏á‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ú‡∏ô‡∏±‡∏á‡∏ä‡∏±‡πâ‡∏ô 1', description: '‡∏á‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ú‡∏ô‡∏±‡∏á‡∏ä‡∏±‡πâ‡∏ô 1', isCompleted: true, completedDate: new Date('2024-02-10') },
              { phaseNumber: 4, name: '‡∏á‡∏≤‡∏ô‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡πà‡∏ô‡∏û‡∏∑‡πâ‡∏ô,‡∏ú‡∏ô‡∏±‡∏á‡∏ä‡∏±‡πâ‡∏ô 2,‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡∏ä‡∏±‡πâ‡∏ô 2', description: '‡∏á‡∏≤‡∏ô‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡πà‡∏ô‡∏û‡∏∑‡πâ‡∏ô ‡∏ú‡∏ô‡∏±‡∏á‡∏ä‡∏±‡πâ‡∏ô 2 ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡∏ä‡∏±‡πâ‡∏ô 2', isCompleted: false },
              { phaseNumber: 5, name: '‡πÄ‡∏Å‡∏£‡πä‡∏≤‡∏õ‡∏π‡∏ô,‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î,‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á', description: '‡πÄ‡∏Å‡∏£‡πä‡∏≤‡∏õ‡∏π‡∏ô ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á', isCompleted: false },
            ],
            currentPhase: 4,
            issueDate: new Date('2024-02-10'),
            deliveryDate: new Date('2024-02-15'),
            additionalNotes: '‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ Precast ‡∏ö‡πâ‡∏≤‡∏ô 2 ‡∏ä‡∏±‡πâ‡∏ô',
            status: 'accepted',
            isActive: true,
            createdAt: new Date('2024-02-10'),
            updatedAt: new Date('2024-02-10'),
          }
          ];
          
          setDeliveries(mockDeliveries);
        } else {
          // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å Firestore
          setDeliveries(deliveriesData);
        }
      } catch (error) {
        console.error('Error loading work deliveries:', error);
      } finally {
        setLoading(false);
      }
    };

    loadDeliveries();
  }, []);

  // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const filteredDeliveries = deliveries.filter(delivery => {
    const matchesSearch = 
      delivery.deliveryNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||
      delivery.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      delivery.projectName.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesWorkType = filterWorkType === 'all' || delivery.workType === filterWorkType;
    const matchesStatus = filterStatus === 'all' || delivery.status === filterStatus;
    
    return matchesSearch && matchesWorkType && matchesStatus;
  });

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
  const handleViewDelivery = (delivery: WorkDelivery) => {
    if (onViewDelivery) {
      console.log('üîÑ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏≤‡∏ô:', delivery.deliveryNumber);
      onViewDelivery(delivery);
    } else {
      // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
      const statusText = delivery.status === 'completed' ? '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' : 
                        delivery.status === 'delivered' ? '‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß' : 
                        delivery.status === 'accepted' ? '‡∏£‡∏±‡∏ö‡∏°‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß' : '‡∏â‡∏ö‡∏±‡∏ö‡∏£‡πà‡∏≤‡∏á';
      
      const workTypeText = delivery.workType === 'house-construction' ? '‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô' : '‡∏á‡∏≤‡∏ô Precast Concrete';
      
      alert(`üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏≤‡∏ô\n\n‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç: ${delivery.deliveryNumber}\n‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô: ${workTypeText}\n‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${delivery.customerName}\n‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£: ${delivery.projectName}\n‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${statusText}\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏ß‡∏î: ${delivery.phases.length} ‡∏á‡∏ß‡∏î\n\nüí° ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡πà‡∏≠‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï`);
    }
  };

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô CertificateHistory)
  const handleDownloadPDF = async (delivery: WorkDelivery) => {
    try {
      console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏≤‡∏ô:', delivery.deliveryNumber);
      
      if (onViewDelivery) {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ callback ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô CertificateHistory)
        alert('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...');
        onViewDelivery(delivery);
        
        // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF
        setTimeout(async () => {
          try {
            await exportWorkDeliveryToPDF(delivery.deliveryNumber);
            alert('‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
          } catch (error) {
            console.error('Error exporting PDF:', error);
            alert('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF ‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF" ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á');
          }
        }, 2000);
      } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ callback ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö
        const goToPreview = confirm(`‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô\n\n‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`);
        
        if (goToPreview) {
          alert(`‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏ô‡∏π:\n- "‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏≤‡∏ô > ${delivery.workType === 'house-construction' ? '‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô' : '‡∏á‡∏≤‡∏ô Precast Concrete'}"\n- ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á\n- ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏•‡∏¥‡∏Å "‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF"`);
        }
      }
    } catch (error) {
      console.error('Error downloading PDF:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF: ' + (error as Error).message);
    }
  };

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤
  const calculateProgress = (phases: any[]) => {
    const completedPhases = phases.filter(phase => phase.isCompleted).length;
    return phases.length > 0 ? Math.round((completedPhases / phases.length) * 100) : 0;
  };

  // ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  const getStatusColor = (status: string) => {
    switch (status) {
      case 'draft': return 'gray';
      case 'delivered': return 'blue';
      case 'accepted': return 'green';
      case 'completed': return 'emerald';
      default: return 'gray';
    }
  };

  // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  const getStatusText = (status: string) => {
    switch (status) {
      case 'draft': return '‡∏£‡πà‡∏≤‡∏á';
      case 'delivered': return '‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß';
      case 'accepted': return '‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß';
      case 'completed': return '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô';
      default: return status;
    }
  };

  // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô
  const getWorkTypeText = (workType: string) => {
    switch (workType) {
      case 'house-construction': return '‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô';
      case 'precast-concrete': return '‡∏á‡∏≤‡∏ô Precast Concrete';
      default: return workType;
    }
  };

  if (loading) {
    return (
      <Box style={{ padding: '2rem', textAlign: 'center' }}>
        <Text>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</Text>
      </Box>
    );
  }

  return (
    <Box style={{ padding: '1.5rem' }}>
      {/* Header */}
      <Box 
        style={{ 
          background: 'linear-gradient(135deg, var(--purple-1), var(--white))',
          borderBottom: '1px solid var(--purple-6)',
          padding: '1.5rem 2rem',
          boxShadow: 'var(--shadow-sm)',
          marginBottom: '1.5rem',
          borderRadius: '8px'
        }}
      >
        <Heading as="h1" size="7" mb="3" style={{ color: 'var(--gray-12)' }}>
          ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô
        </Heading>
        <Text size="3" style={{ color: 'var(--gray-11)' }}>
          ‡∏î‡∏π‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        </Text>
      </Box>

      {/* ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
      <Card style={{ padding: '1.5rem', marginBottom: '1.5rem' }}>
        <Flex direction={{ initial: 'column', md: 'row' }} gap="4" align="end">
          <Box style={{ flex: 1 }}>
            <Text as="label" size="2" weight="medium" mb="2" style={{ display: 'block' }}>
              ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
            </Text>
            <input
              type="text"
              placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç, ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤, ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              style={{
                width: '100%',
                padding: '0.5rem',
                borderRadius: '6px',
                border: '1px solid var(--gray-7)',
                fontSize: '14px'
              }}
            />
          </Box>
          
          <Box>
            <Text as="label" size="2" weight="medium" mb="2" style={{ display: 'block' }}>
              ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô
            </Text>
            <select
              value={filterWorkType}
              onChange={(e) => setFilterWorkType(e.target.value)}
              style={{
                padding: '0.5rem',
                borderRadius: '6px',
                border: '1px solid var(--gray-7)',
                fontSize: '14px',
                minWidth: '150px'
              }}
            >
              <option value="all">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
              <option value="house-construction">‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô</option>
              <option value="precast-concrete">‡∏á‡∏≤‡∏ô Precast Concrete</option>
            </select>
          </Box>
          
          <Box>
            <Text as="label" size="2" weight="medium" mb="2" style={{ display: 'block' }}>
              ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            </Text>
            <select
              value={filterStatus}
              onChange={(e) => setFilterStatus(e.target.value)}
              style={{
                padding: '0.5rem',
                borderRadius: '6px',
                border: '1px solid var(--gray-7)',
                fontSize: '14px',
                minWidth: '120px'
              }}
            >
              <option value="all">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
              <option value="draft">‡∏£‡πà‡∏≤‡∏á</option>
              <option value="delivered">‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß</option>
              <option value="accepted">‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡πÅ‡∏•‡πâ‡∏ß</option>
              <option value="completed">‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</option>
            </select>
          </Box>
        </Flex>
      </Card>

      {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö */}
      {filteredDeliveries.length === 0 ? (
        <Card style={{ padding: '3rem', textAlign: 'center' }}>
          <Text size="4" color="gray">
            {searchTerm || filterWorkType !== 'all' || filterStatus !== 'all' 
              ? '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤' 
              : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô'}
          </Text>
        </Card>
      ) : (
        <Flex direction="column" gap="4">
          {filteredDeliveries.map((delivery) => {
            const progress = calculateProgress(delivery.phases);
            
            return (
              <Card key={delivery.id} style={{ padding: '1.5rem' }}>
                <Flex justify="between" align="start" mb="4">
                  <Box style={{ flex: 1 }}>
                    <Flex align="center" gap="3" mb="2">
                      <Heading as="h3" size="4">
                        {delivery.deliveryNumber}
                      </Heading>
                      <Badge color={getStatusColor(delivery.status)} size="2">
                        {getStatusText(delivery.status)}
                      </Badge>
                      <Badge color="blue" size="2">
                        {getWorkTypeText(delivery.workType)}
                      </Badge>
                    </Flex>
                    
                    <Text size="3" mb="1" weight="medium">
                      {delivery.customerName} - {delivery.projectName}
                    </Text>
                    <Text size="2" color="gray" mb="2">
                      {delivery.projectLocation}
                    </Text>
                    
                    <Flex align="center" gap="4" mb="3">
                      <Text size="2">
                        <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å:</strong> {delivery.issueDate.toLocaleDateString('th-TH')}
                      </Text>
                      <Text size="2">
                        <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö:</strong> {delivery.deliveryDate.toLocaleDateString('th-TH')}
                      </Text>
                      <Text size="2">
                        <strong>‡∏á‡∏ß‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà {delivery.currentPhase}
                      </Text>
                    </Flex>

                    {/* ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ */}
                    <Box mb="3">
                      <Flex align="center" justify="between" mb="1">
                        <Text size="2" weight="medium">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤</Text>
                        <Text size="2">{progress}%</Text>
                      </Flex>
                      <Box
                        style={{
                          width: '100%',
                          height: '6px',
                          backgroundColor: 'var(--gray-4)',
                          borderRadius: '3px',
                          overflow: 'hidden'
                        }}
                      >
                        <Box
                          style={{
                            width: `${progress}%`,
                            height: '100%',
                            backgroundColor: 
                              progress === 100 ? 'var(--green-9)' : 
                              progress >= 50 ? 'var(--yellow-9)' : 'var(--red-9)',
                            borderRadius: '3px',
                            transition: 'width 0.3s ease'
                          }}
                        />
                      </Box>
                    </Box>

                    {delivery.additionalNotes && (
                      <Text size="2" color="gray" style={{ fontStyle: 'italic' }}>
                        ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: {delivery.additionalNotes}
                      </Text>
                    )}
                  </Box>
                  
                  <Flex direction="column" gap="2" style={{ minWidth: '120px' }}>
                    <Button
                      size="2"
                      variant="soft"
                      onClick={() => handleViewDelivery(delivery)}
                      style={{
                        background: 'linear-gradient(135deg, var(--blue-9), var(--indigo-9))',
                        border: 'none',
                        borderRadius: '6px',
                        color: 'white'
                      }}
                    >
                      <Flex align="center" gap="1">
                        <EyeOpenIcon width="14" height="14" />
                        <Text size="2">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</Text>
                      </Flex>
                    </Button>
                    
                    <Button
                      size="2"
                      variant="soft"
                      onClick={() => handleDownloadPDF(delivery)}
                      style={{
                        backgroundColor: 'var(--slate-3)',
                        color: 'var(--slate-11)',
                        borderRadius: '6px'
                      }}
                    >
                      <Flex align="center" gap="1">
                        <DownloadIcon width="14" height="14" />
                        <Text size="2">‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF</Text>
                      </Flex>
                    </Button>
                  </Flex>
                </Flex>
              </Card>
            );
          })}
        </Flex>
      )}
    </Box>
  );
};
