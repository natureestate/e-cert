import React, { useState, useMemo, useEffect } from 'react';
import { Box, Flex, Heading, Text, Button } from '@radix-ui/themes';
import { WorkDeliveryForm } from './WorkDeliveryForm';
import { WorkDeliveryPreview } from './WorkDeliveryPreview';
import { FirestoreService } from '../services/firestoreService';
import { Company, Customer, Project } from '../types/firestore';
import { 
  WorkType, 
  WorkDelivery,
  WorkDeliveryDetails, 
  HouseConstructionPhase, 
  defaultHouseConstructionPhases,
  phaseTemplates,
  PhaseTemplateFirestore
} from '../types/workDelivery';
import { exportWorkDeliveryToPDF } from '../utils/pdfGenerator';
import { printWorkDelivery } from '../utils/printUtils';

// ‡∏•‡∏ö LogoInfo interface - ‡πÉ‡∏ä‡πâ‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á

interface FormData {
  companyId: string;
  customerId: string;
  projectId: string;
  workType: WorkType;
  buildingType?: 'single-story' | 'two-story';
  currentPhase: number;
  deliveryDate: string;
  additionalNotes: string;
}

interface WorkDeliveryHouseProps {
  viewingWorkDelivery?: WorkDelivery | null;
  workDeliveryDetails?: WorkDeliveryDetails | null;
}

export const WorkDeliveryHouse: React.FC<WorkDeliveryHouseProps> = ({ 
  viewingWorkDelivery,
  workDeliveryDetails 
}) => {
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
  const [formData, setFormData] = useState<FormData>({
    companyId: '',
    customerId: '',
    projectId: '',
    workType: 'house-construction',
    buildingType: undefined,
    currentPhase: 1,
    deliveryDate: '',
    additionalNotes: '',
  });

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô
  const [phases, setPhases] = useState<HouseConstructionPhase[]>([]);
  const [deliveryDetails, setDeliveryDetails] = useState<WorkDeliveryDetails | null>(null);
  
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏•‡πÇ‡∏Å‡πâ (‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
  const [logoSrc, setLogoSrc] = useState<string | null>(null);
  const [logoSize, setLogoSize] = useState<'small' | 'medium' | 'large'>('medium');
  
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å Firestore
  const [relatedData, setRelatedData] = useState<{
    company: Company | null;
    customer: Customer | null;
    project: Project | null;
  }>({
    company: null,
    customer: null,
    project: null,
  });

  // Flag ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏à‡∏≤‡∏Å Firestore ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å history
  const [isLoadingFromHistory, setIsLoadingFromHistory] = useState(false);
  
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö PDF ‡πÅ‡∏•‡∏∞ Print
  const [isExporting, setIsExporting] = useState(false);
  const [isPrinting, setIsPrinting] = useState(false);

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å)
  const isFormValid = useMemo(() => {
    const requiredFields = ['companyId', 'customerId', 'projectId', 'deliveryDate'];
    const fieldsValid = requiredFields.every(field => {
      const value = formData[field as keyof FormData];
      return typeof value === 'string' && value.trim() !== '';
    });
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô
    const buildingTypeValid = formData.workType !== 'house-construction' || formData.buildingType;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏á‡∏ß‡∏î
    const phasesValid = phases.length > 0;
    
    return fieldsValid && buildingTypeValid && phasesValid;
  }, [formData, phases]);

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏ô‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
  // const handleLogoChange = ... (‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß)

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ
  const handleLogoSizeChange = (size: 'small' | 'medium' | 'large') => {
    setLogoSize(size);
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏•‡∏á localStorage (‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ)
    try {
      localStorage.setItem('preferredLogoSize', size);
    } catch (error) {
      console.warn('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏•‡∏á localStorage:', error);
    }
  };

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô
  const handleWorkTypeChange = (workType: WorkType) => {
    setFormData(prev => ({ 
      ...prev, 
      workType,
      buildingType: workType === 'house-construction' ? undefined : prev.buildingType 
    }));
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô
    loadPhasesByWorkType(workType, formData.buildingType);
  };

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£
  const handleBuildingTypeChange = (buildingType: 'single-story' | 'two-story') => {
    setFormData(prev => ({ ...prev, buildingType }));
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£
    loadPhasesByWorkType(formData.workType, buildingType);
  };

  // ‡πÇ‡∏´‡∏•‡∏î‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ (‡∏à‡∏≤‡∏Å‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô)
  const loadPhasesByWorkType = (workType: WorkType, buildingType?: 'single-story' | 'two-story') => {
    let selectedTemplate = phaseTemplates.find(template => {
      if (workType === 'house-construction') {
        return template.workType === workType && template.buildingType === buildingType;
      }
      return template.workType === workType;
    });

    if (selectedTemplate) {
      setPhases([...selectedTemplate.phases] as HouseConstructionPhase[]);
      
      // ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏ß‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏á‡∏ß‡∏î‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à)
      const currentPhaseIndex = selectedTemplate.phases.findIndex(phase => !phase.isCompleted);
      const currentPhaseNumber = currentPhaseIndex !== -1 ? currentPhaseIndex + 1 : selectedTemplate.phases.length;
      
      setFormData(prev => ({ ...prev, currentPhase: currentPhaseNumber }));
    }
  };

  // ‡πÇ‡∏´‡∏•‡∏î‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï
  const handlePhaseTemplateChange = async (templateId: string) => {
    try {
      const template = await FirestoreService.getPhaseTemplateById(templateId);
      if (template) {
        console.log('üîÑ ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô:', template.name);
        setPhases([...template.phases] as HouseConstructionPhase[]);
        
        // ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏ß‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏á‡∏ß‡∏î‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à)
        const currentPhaseIndex = template.phases.findIndex(phase => !phase.isCompleted);
        const currentPhaseNumber = currentPhaseIndex !== -1 ? currentPhaseIndex + 1 : template.phases.length;
        
        setFormData(prev => ({ ...prev, currentPhase: currentPhaseNumber }));
      }
    } catch (error) {
      console.error('Error loading phase template:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô');
    }
  };

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£ toggle ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô
  const handlePhaseToggle = (phaseIndex: number, isCompleted: boolean, notes?: string) => {
    setPhases(prev => prev.map((phase, index) => {
      if (index === phaseIndex) {
        return {
          ...phase,
          isCompleted,
          completedDate: isCompleted ? new Date() : undefined,
          notes: notes || phase.notes
        };
      }
      return phase;
    }));

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏á‡∏ß‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    if (isCompleted) {
      // ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏ß‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à
      const updatedPhases = [...phases];
      updatedPhases[phaseIndex] = {
        ...updatedPhases[phaseIndex],
        isCompleted: true,
        completedDate: new Date(),
        notes: notes || updatedPhases[phaseIndex].notes
      };
      
      const nextIncompleteIndex = updatedPhases.findIndex(phase => !phase.isCompleted);
      const nextPhaseNumber = nextIncompleteIndex !== -1 ? nextIncompleteIndex + 1 : updatedPhases.length;
      
      setFormData(prev => ({ ...prev, currentPhase: nextPhaseNumber }));
    }
  };

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å Firestore ‡πÄ‡∏°‡∏∑‡πà‡∏≠ form data ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    // ‚ö†Ô∏è ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å history
    if (isLoadingFromHistory) {
      console.log('‚è≠Ô∏è ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î related data ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å history');
      return;
    }

    const loadRelatedData = async () => {
      try {
        const promises = [];
        const newRelatedData = { ...relatedData };

        if (formData.companyId) {
          promises.push(
            FirestoreService.getCompanies().then(companies => {
              const selectedCompany = companies.find(c => c.id === formData.companyId) || null;
              newRelatedData.company = selectedCompany;
              
              // ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
              if (selectedCompany?.logoUrl && selectedCompany.logoUrl.trim() !== '') {
                setLogoSrc(selectedCompany.logoUrl);
                console.log('üè¢ WorkDeliveryHouse: ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥:', selectedCompany.logoUrl);
              } else {
                setLogoSrc(null);
                console.log('üè¢ WorkDeliveryHouse: ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏•‡πÇ‡∏Å‡πâ');
              }
            })
          );
        } else {
          // ‡∏•‡πâ‡∏≤‡∏á‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
          setLogoSrc(null);
        }

        if (formData.customerId) {
          promises.push(
            FirestoreService.getCustomers().then(customers => {
              newRelatedData.customer = customers.find(c => c.id === formData.customerId) || null;
            })
          );
        }

        if (formData.projectId) {
          promises.push(
            FirestoreService.getProjects().then(projects => {
              newRelatedData.project = projects.find(p => p.id === formData.projectId) || null;
            })
          );
        }

        await Promise.all(promises);
        setRelatedData(newRelatedData);
        console.log('üìä Related data loaded:', newRelatedData);
      } catch (error) {
        console.error('Error loading related data:', error);
      }
    };

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const hasFormData = Object.entries(formData).some(([key, value]) => {
      return typeof value === 'string' && value.trim() !== '';
    });

    if (hasFormData) {
      loadRelatedData();
    }
  }, [formData.companyId, formData.customerId, formData.projectId, isLoadingFromHistory]);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á preview ‡πÅ‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á (‡πÑ‡∏°‡πà‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
  const generatePreviewManually = async () => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á preview ‡πÅ‡∏ö‡∏ö‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢
    const hasBasicData = formData.companyId && formData.customerId && formData.projectId && formData.deliveryDate;
    
    // üîç Detailed logging ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö debug
    console.log('üîç Manual Preview condition check:', {
      hasBasicData,
      formData: {
        companyId: formData.companyId,
        customerId: formData.customerId, 
        projectId: formData.projectId,
        deliveryDate: formData.deliveryDate
      },
      relatedData: {
        hasCompany: !!relatedData.company,
        hasCustomer: !!relatedData.customer,
        hasProject: !!relatedData.project,
        companyName: relatedData.company?.name,
        customerName: relatedData.customer?.name,
        projectName: relatedData.project?.name
      },
      phases: phases.length
    });
    
    // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö viewing mode ‡∏à‡∏≤‡∏Å history
    const canGeneratePreview = viewingWorkDelivery ? 
      (formData.deliveryDate && phases.length > 0) : // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö viewing mode ‡πÄ‡∏ä‡πá‡∏Ñ‡πÅ‡∏Ñ‡πà deliveryDate ‡πÅ‡∏•‡∏∞ phases
      (hasBasicData && relatedData.company && relatedData.customer && relatedData.project && phases.length > 0);

    if (canGeneratePreview) {
      
      try {
        console.log('‚úÖ Manual preview - All conditions met');
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢
        const issueDate = new Date().toLocaleDateString('th-TH', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        });

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö (‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö preview)
        const deliveryNumber = `WD-HOUSE-PREVIEW-${Date.now()}`;
        
        // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢
        const formattedDeliveryDate = new Date(formData.deliveryDate).toLocaleDateString('th-TH', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        });

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö preview
        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å workDeliveryDetails ‡∏´‡∏≤‡∏Å‡∏°‡∏µ (‡∏Å‡∏£‡∏ì‡∏µ viewing mode) ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ relatedData
        const previewDeliveryDetails: WorkDeliveryDetails = {
          companyName: workDeliveryDetails?.companyName || relatedData.company?.name || '',
          companyAddress: workDeliveryDetails?.companyAddress || relatedData.company?.address || '',
          companyPhone: workDeliveryDetails?.companyPhone || relatedData.company?.phone || '',
          companyWebsite: workDeliveryDetails?.companyWebsite || relatedData.company?.website || '',
          projectNameAndLocation: workDeliveryDetails?.projectNameAndLocation || 
            (relatedData.project ? `${relatedData.project.name} - ${relatedData.project.location}` : ''),
          customerName: workDeliveryDetails?.customerName || relatedData.customer?.name || '',
          buyer: workDeliveryDetails?.buyer || relatedData.customer?.buyer || '',
          workType: formData.workType,
          phases: phases,
          currentPhase: formData.currentPhase,
          deliveryNumber: workDeliveryDetails?.deliveryNumber || deliveryNumber,
          issueDate: workDeliveryDetails?.issueDate || issueDate,
          deliveryDate: workDeliveryDetails?.deliveryDate || formattedDeliveryDate,
          additionalNotes: formData.additionalNotes,
        };
        
        setDeliveryDetails(previewDeliveryDetails);
        console.log('üéâ Manual Preview generated successfully');
        alert('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Preview ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
      } catch (error) {
        console.error('Error generating manual preview:', error);
        alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Preview');
      }
    } else {
      console.log('‚ùå Manual Preview conditions not met');
      alert('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Preview');
    }
  };

  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  useEffect(() => {
    if (phases.length === 0) {
      console.log('üîß Initializing default phases for house construction');
      setPhases([...defaultHouseConstructionPhases]);
    }
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
    if (!formData.workType) {
      console.log('üîß Setting default work type');
      setFormData(prev => ({
        ...prev,
        workType: 'house-construction',
        buildingType: 'two-story'
      }));
    }
  }, []);

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ deliveryDetails ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏à‡∏≤‡∏Å history
  useEffect(() => {
    if (workDeliveryDetails && viewingWorkDelivery) {
      console.log('üîÑ Loading work delivery from history:', workDeliveryDetails.deliveryNumber);
      
      // üîí ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ flag ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥
      setIsLoadingFromHistory(true);
      
      // üîÑ ‡πÉ‡∏ä‡πâ setTimeout ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ state updates ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏≥‡∏î‡∏±‡∏ö
      setTimeout(() => {
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ deliveryDetails ‡πÅ‡∏•‡∏∞ phases ‡∏Å‡πà‡∏≠‡∏ô
        setDeliveryDetails(workDeliveryDetails);
        setPhases(viewingWorkDelivery.phases as HouseConstructionPhase[]);
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ formData
        const newFormData = {
          companyId: viewingWorkDelivery.companyId,
          customerId: viewingWorkDelivery.customerId,
          projectId: viewingWorkDelivery.projectId,
          workType: viewingWorkDelivery.workType,
          buildingType: viewingWorkDelivery.buildingType as 'single-story' | 'two-story' | undefined,
          currentPhase: viewingWorkDelivery.currentPhase,
          deliveryDate: viewingWorkDelivery.deliveryDate.toISOString().split('T')[0],
          additionalNotes: viewingWorkDelivery.additionalNotes || '',
        };
        setFormData(newFormData);

        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ relatedData
        const newRelatedData = {
          company: {
            id: viewingWorkDelivery.companyId,
            name: viewingWorkDelivery.companyName,
            address: viewingWorkDelivery.companyAddress,
            phone: viewingWorkDelivery.companyPhone,
            website: viewingWorkDelivery.companyWebsite,
            logoUrl: viewingWorkDelivery.companyLogoUrl,
            isActive: true,
            createdAt: new Date(),
            updatedAt: new Date()
          },
          customer: {
            id: viewingWorkDelivery.customerId,
            name: viewingWorkDelivery.customerName,
            buyer: viewingWorkDelivery.buyer,
            isActive: true,
            createdAt: new Date(),
            updatedAt: new Date()
          },
          project: {
            id: viewingWorkDelivery.projectId,
            name: viewingWorkDelivery.projectName,
            location: viewingWorkDelivery.projectLocation,
            isActive: true,
            createdAt: new Date(),
            updatedAt: new Date()
          }
        };
        setRelatedData(newRelatedData);
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏´‡∏≤‡∏Å‡∏°‡∏µ
        if (viewingWorkDelivery.companyLogoUrl) {
          setLogoSrc(viewingWorkDelivery.companyLogoUrl);
        }

        console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å history ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', {
          formData: newFormData,
          relatedData: newRelatedData
        });

        // üîì ‡∏õ‡∏¥‡∏î flag ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
        setTimeout(() => {
          setIsLoadingFromHistory(false);
          console.log('üîì ‡∏õ‡∏¥‡∏î loading flag - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î related data ‡∏õ‡∏Å‡∏ï‡∏¥‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß');
        }, 200);
      }, 100);
    }
  }, [workDeliveryDetails, viewingWorkDelivery]);

  // Debug formData changes
  useEffect(() => {
    console.log('üìù Form data changed:', formData);
  }, [formData]);

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô
  const handleGenerate = async () => {
    console.log('üîò ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô');
    console.log('üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ü‡∏≠‡∏£‡πå‡∏°:', { isFormValid, relatedData });
    
    if (!isFormValid || !relatedData.company || !relatedData.customer || !relatedData.project) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
      return;
    }

    try {
      // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö undefined values ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å object ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
      const cleanObject = (obj: any): any => {
        if (obj === null || obj === undefined) {
          return undefined;
        }
        
        if (Array.isArray(obj)) {
          return obj.map(item => cleanObject(item)).filter(item => item !== undefined);
        }
        
        if (typeof obj === 'object' && obj.constructor === Object) {
          const cleaned: any = {};
          Object.keys(obj).forEach(key => {
            const value = cleanObject(obj[key]);
            if (value !== undefined && value !== null && value !== '') {
              cleaned[key] = value;
            }
          });
          return Object.keys(cleaned).length > 0 ? cleaned : undefined;
        }
        
        return obj;
      };

      // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const validateRequiredFields = (data: any) => {
        const requiredFields = [
          'workType', 'companyId', 'companyName', 'customerId', 'customerName',
          'projectId', 'projectName', 'projectLocation', 'phases', 'deliveryDate'
        ];
        
        const missingFields = requiredFields.filter(field => !data[field]);
        
        if (missingFields.length > 0) {
          throw new Error(`‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô: ${missingFields.join(', ')}`);
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô
        if (!Array.isArray(data.phases) || data.phases.length === 0) {
          throw new Error('‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô');
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
        if (isNaN(Date.parse(data.deliveryDate))) {
          throw new Error('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
        }

        return true;
      };

      // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (‡∏•‡∏ö undefined values)
      const rawWorkDeliveryData = {
        workType: formData.workType,
        buildingType: formData.buildingType,
        
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
        companyId: formData.companyId,
        companyName: relatedData.company.name || '',
        companyAddress: relatedData.company.address || '',
        companyPhone: relatedData.company.phone || '',
        companyWebsite: relatedData.company.website || '',
        companyLogoUrl: relatedData.company.logoUrl,
        
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
        customerId: formData.customerId,
        customerName: relatedData.customer.name || '',
        buyer: relatedData.customer.buyer,
        
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£
        projectId: formData.projectId,
        projectName: relatedData.project.name || '',
        projectLocation: relatedData.project.location || '',
        
        // ‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô
        phases: phases,
        currentPhase: formData.currentPhase,
        
        // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
        issueDate: new Date(),
        deliveryDate: new Date(formData.deliveryDate),
        
        // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
        additionalNotes: formData.additionalNotes,
        
        // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        status: 'draft',
        isActive: true
      };

      // ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡∏•‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô undefined
      const workDeliveryData = cleanObject(rawWorkDeliveryData);

      // Debug: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î
      console.log('üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î:', rawWorkDeliveryData);
      console.log('üßπ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î:', workDeliveryData);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ undefined values ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const hasUndefined = JSON.stringify(workDeliveryData).includes('undefined');
      if (hasUndefined) {
        console.error('‚ùå ‡∏¢‡∏±‡∏á‡∏°‡∏µ undefined values ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', workDeliveryData);
        throw new Error('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏°‡∏µ undefined values');
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
      validateRequiredFields(workDeliveryData);

      console.log('‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß):', workDeliveryData);

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Firestore
      const savedId = await FirestoreService.createWorkDelivery(workDeliveryData);
      
      console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ID:', savedId);
      alert(`‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!\nID: ${savedId}`);

      // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏´‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      setFormData({
        companyId: '',
        customerId: '',
        projectId: '',
        workType: 'house-construction',
        buildingType: undefined,
        currentPhase: 1,
        deliveryDate: '',
        additionalNotes: '',
      });
      setPhases([...defaultHouseConstructionPhases]);
      setDeliveryDetails(null);
      
    } catch (error) {
      console.error('Error generating work delivery:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô: ' + (error as Error).message);
    }
  };

  // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä preview
  const handleRefreshPreview = () => {
    console.log('üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä preview ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô');
    setDeliveryDetails(null);
    setTimeout(() => {
      if (isFormValid && relatedData.company && relatedData.customer && relatedData.project) {
        const generatePreviewNow = async () => {
          try {
            const issueDate = new Date().toLocaleDateString('th-TH', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            });
            const deliveryNumber = `WD-HOUSE-PREVIEW-${Date.now()}`;
            const formattedDeliveryDate = new Date(formData.deliveryDate).toLocaleDateString('th-TH', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            });

            const previewDeliveryDetails: WorkDeliveryDetails = {
              companyName: relatedData.company.name,
              companyAddress: relatedData.company.address,
              companyPhone: relatedData.company.phone,
              companyWebsite: relatedData.company.website,
              projectNameAndLocation: `${relatedData.project.name} - ${relatedData.project.location}`,
              customerName: relatedData.customer.name,
              buyer: relatedData.customer.buyer,
              workType: formData.workType,
              phases: phases,
              currentPhase: formData.currentPhase,
              deliveryNumber,
              issueDate,
              deliveryDate: formattedDeliveryDate,
              additionalNotes: formData.additionalNotes,
            };
            
            setDeliveryDetails(previewDeliveryDetails);
          } catch (error) {
            console.error('Error refreshing preview:', error);
          }
        };
        generatePreviewNow();
      }
    }, 100);
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF
  const handleExportPDF = async () => {
    if (!deliveryDetails) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF');
      return;
    }

    setIsExporting(true);
    try {
      await exportWorkDeliveryToPDF(
        deliveryDetails.deliveryNumber,
        deliveryDetails,
        logoSrc
      );
      alert('‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    } catch (error) {
      console.error('Error exporting PDF:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF: ' + (error as Error).message);
    } finally {
      setIsExporting(false);
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå
  const handlePrint = async () => {
    if (!deliveryDetails) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå');
      return;
    }

    setIsPrinting(true);
    try {
      await printWorkDelivery(deliveryDetails.deliveryNumber);
    } catch (error) {
      console.error('Error printing:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå: ' + (error as Error).message);
    } finally {
      setIsPrinting(false);
    }
  };

  return (
    <Box style={{ padding: '1.5rem' }}>
      {/* Header */}
      <Box 
        style={{ 
          background: 'linear-gradient(135deg, var(--green-1), var(--white))',
          borderBottom: '1px solid var(--green-6)',
          padding: '1.5rem 2rem',
          boxShadow: 'var(--shadow-sm)',
          marginBottom: '1.5rem',
          borderRadius: '8px'
        }}
      >
        <Heading as="h1" size="7" mb="3" style={{ color: 'var(--gray-12)' }}>
          ‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô - ‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô
        </Heading>
        <Text size="3" style={{ color: 'var(--gray-11)' }}>
          ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏ß‡∏î‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô
        </Text>
      </Box>

      <Flex 
        gap="6" 
        style={{ 
          maxWidth: '1600px', 
          width: '100%',
          backgroundColor: 'white',
          borderRadius: '8px',
          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',
          padding: '1.5rem'
        }}
        direction={{ initial: 'column', lg: 'row' }}
      >
        <WorkDeliveryForm
          formData={formData}
          onFormChange={handleFormChange}
          onWorkTypeChange={handleWorkTypeChange}
          onBuildingTypeChange={handleBuildingTypeChange}
          onPhaseToggle={handlePhaseToggle}
          phases={phases}
          onGenerate={handleGenerate}
          isFormValid={isFormValid}
          onPhaseTemplateChange={handlePhaseTemplateChange}
          logoSrc={logoSrc}
          logoSize={logoSize}
          onLogoSizeChange={handleLogoSizeChange}
          onGeneratePreview={generatePreviewManually}
        />
        
        <WorkDeliveryPreview
          deliveryDetails={deliveryDetails}
          logoSrc={logoSrc}
          logoSize={logoSize}
          onExportPDF={handleExportPDF}
          onPrint={handlePrint}
          isExporting={isExporting}
          isPrinting={isPrinting}
          editable={true}
          onRefreshPreview={handleRefreshPreview}
        />
      </Flex>
    </Box>
  );
};
